{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\r\n\r\n\r\n// -->\u7F16\u8BD1\u6A21\u677F\r\nexport function compile(template) {\r\n    // 1-->\u7F16\u8BD1html\u6A21\u677F\u4E3Ajs\u8BED\u6CD5\uFF0C\u62BD\u8C61\u8BED\u6CD5\u6811\r\n    const ast = parse(template);\r\n\r\n    return ast\r\n    // 2-->\u9884\u5904\u7406ast\u8BED\u6CD5\u6811\r\n    //     transform(ast)\r\n\r\n    // 3-->\u6700\u7EC8\u751F\u6210\u4EE3\u7801\r\n\r\n    //     return generate(ast)\r\n}\r\n\r\n\r\n/* \u516C\u5171\u65B9\u6CD5 */\r\nfunction createParseContext(template) {\r\n    return {\r\n        line: 1, //-->\u7B2C\u4E00\u884C\r\n        column: 1, //-->\u7B2C\u4E00\u5217\r\n        offset: 0, //-->\u7B2C\u4E00\u4E2A\r\n        source: template, //-->\u6B64\u5B57\u6BB5\u4F1A\u4E0D\u505C\u89E3\u6790\uFF0C\u76F4\u5230\u89E3\u6790\u4E3A\u7A7A\r\n        originalSource: template, //-->\u8FD9\u4E2A\u4E0D\u4F1A\u53D8\r\n    }\r\n}\r\n\r\nfunction isEnd(context) {\r\n    return !context.source //--> \u4E0A\u4E0B\u6587\u4E3A\u7A7A\u5B57\u7B26\u4E32\u65F6\u8868\u793A\u7ED3\u675F\r\n}\r\n//-->\u83B7\u53D6\u8D77\u59CB\u4F4D\u7F6E\r\nfunction getCursor(context) {\r\n    const { line, column, offset } = context;\r\n    return { line, column, offset };\r\n}\r\n\r\n// -->\u622A\u53D6\u6587\u672C\uFF0C\u4E22\u5165\u4E0A\u4E0B\u6587\u4E0E\u7ED3\u675Findex\r\nfunction parseTextData(context, endIndex) {\r\n    const rawText = context.source.slice(0, endIndex)  //-->\u83B7\u53D6 asd ,\u5269\u4E0B <div></div> {{ss}}\r\n    // -->\u8FD8\u9700\u8981\u5220\u9664\r\n    advanceBy(context, endIndex)\r\n\r\n    return rawText\r\n}\r\n\r\n// -->\u5220\u9664\u6587\u672C\uFF0C\u4E22\u5165\u4E0A\u4E0B\u6587\u4E0E\u7ED3\u675Findex\r\nfunction advanceBy(context, endIndex) {\r\n    let source = context.source\r\n    // -->\u66F4\u65B0\u4F4D\u7F6E\r\n    advancePositionWithMutation(context, source, endIndex);\r\n\r\n    context.source = context.source.slice(endIndex); //-->\u4ECE\u7ED3\u675Findex\u5F00\u59CB\u5F80\u524D\u622A\u53D6\r\n}\r\n\r\n//-->\u66F4\u65B0\u4F4D\u7F6E\r\nconst advancePositionWithMutation = (context, source, endIndex) => {\r\n    let linesCount = 0\r\n    let linePos = -1\r\n    for (let i = 0; i < endIndex; i++) {\r\n        //--> \u56DE\u8F66\u52A0\u4E00\u884C\r\n        if (source.charCodeAt(i) === 10) {\r\n            linesCount++\r\n            linePos = i\r\n        }\r\n    }\r\n\r\n    context.line += linesCount\r\n    context.offset += endIndex\r\n    context.column = linePos === -1 ? context.column + endIndex : endIndex - linePos\r\n}\r\n\r\n\r\n/* \u516C\u5171\u65B9\u6CD5 */\r\n\r\n\r\n\r\n\r\n/* 1.parse \u7F16\u8BD1\u6A21\u5757 */\r\n\r\nfunction parse(template) {\r\n    // 1-->\u521B\u5EFA\u4E0A\u4E0B\u6587\uFF0C\u6838\u5FC3\u6B65\u9AA4\uFF0C\u8BB0\u5F55\u89E3\u6790\u8FDB\u5EA6\r\n    const context = createParseContext(template);\r\n\r\n    // 2-->\u89E3\u6790\uFF0C\u5982\u679C\u662F {{}} \u8868\u8FBE\u5F0F \uFF0C< \u4EE3\u8868\u5143\u7D20\uFF0C\u5176\u4F59\u662F\u6587\u672C\r\n    let nodes = []\r\n    while (!isEnd(context)) {\r\n        const source = context.source\r\n        let node\r\n        if (source.startsWith('{{')) {\r\n            // -->\u8868\u8FBE\u5F0F\u89E3\u6790\r\n        } else if (source[0] === '<') {\r\n            // -->\u5143\u7D20\u89E3\u6790\r\n        }\r\n\r\n        // -->\u6587\u672C\r\n        if (!node) {\r\n            node = parseText(context)\r\n            console.log(node);\r\n\r\n            break\r\n        }\r\n        nodes.push(node)\r\n    }\r\n\r\n\r\n}\r\n\r\n// --> parseText \u7F16\u8BD1\u6587\u672C\r\nconst parseText = context => {\r\n    // 1-->\u89E3\u6790\u6587\u672C\uFF0C\u53EA\u622A\u53D6\u6B63\u5E38\u6587\u672C\uFF0C\u5982\u679C\u9047\u5230\u8868\u8FBE\u5F0F\u6216\u8005\u5143\u7D20\u5C31\u7ED3\u675F \u3002\u4F8B\u5982asd <div></div> {{ss}},\u4F7F\u7528\u5047\u8BBE\u6CD5\r\n    let endTokens = ['{{', '<']\r\n\r\n    // 2-->\u5047\u8BBE\u6CD5\uFF0C\u9ED8\u8BA4\u7ED3\u675F\u957F\u5EA6\u662F\u6700\u540E\r\n    let endIndex = context.source.length\r\n\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1) //-->\u4ECE\u7B2C\u4E8C\u4E2A\u5B57\u7B26\u5F00\u59CB\u67E5\u627E,\u67E5\u770B\u662F\u5426\u6709\u7ED3\u675F\u6807\u8BB0\r\n        if (index !== -1 && endIndex > index) {\r\n            //-->\u5F53\u524D\u6709index,\u5E76\u4E14\u5927\u4E8E\u7ED3\u675Findex\uFF0C\u8BF4\u660E\u5728\u5B57\u7B26\u4E32\u5185,\u4E00\u76F4\u5B9A\u4F4D,\r\n            endIndex = index\r\n        }\r\n    }\r\n\r\n    // -->\u83B7\u53D6\u8D77\u59CB\u6570\u636E\r\n    const start = getCursor(context)\r\n\r\n    // -->\u622A\u53D6\u5185\u5BB9\uFF0C\u4F1A\u8FD4\u56DE\u622A\u53D6\u7684\u5185\u5BB9\uFF0C\u5E76\u4E14\u5220\u9664\u622A\u53D6\u7684\u90A3\u90E8\u5206\u5185\u5BB9\uFF0C\u66F4\u65B0\u4F4D\u7F6E\r\n    const content = parseTextData(context, endIndex)\r\n\r\n    return {\r\n        type: NodeTypes.TEXT,\r\n        content,\r\n        // loc:getSelection() //-->todo\r\n    }\r\n}\r\n\r\n\r\n/* 1.parse \u7F16\u8BD1\u6A21\u5757\u7ED3\u675F */"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAIO,mBAAiB,UAAU;AAE9B,UAAM,MAAM,MAAM,QAAQ;AAE1B,WAAO;AAAA,EAOX;AAIA,8BAA4B,UAAU;AAClC,WAAO;AAAA,MACH,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACpB;AAAA,EACJ;AAEA,iBAAe,SAAS;AACpB,WAAO,CAAC,QAAQ;AAAA,EACpB;AAEA,qBAAmB,SAAS;AACxB,UAAM,EAAE,MAAM,QAAQ,WAAW;AACjC,WAAO,EAAE,MAAM,QAAQ,OAAO;AAAA,EAClC;AAGA,yBAAuB,SAAS,UAAU;AACtC,UAAM,UAAU,QAAQ,OAAO,MAAM,GAAG,QAAQ;AAEhD,cAAU,SAAS,QAAQ;AAE3B,WAAO;AAAA,EACX;AAGA,qBAAmB,SAAS,UAAU;AAClC,QAAI,SAAS,QAAQ;AAErB,gCAA4B,SAAS,QAAQ,QAAQ;AAErD,YAAQ,SAAS,QAAQ,OAAO,MAAM,QAAQ;AAAA,EAClD;AAGA,MAAM,8BAA8B,CAAC,SAAS,QAAQ,aAAa;AAC/D,QAAI,aAAa;AACjB,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAE/B,UAAI,OAAO,WAAW,CAAC,MAAM,IAAI;AAC7B;AACA,kBAAU;AAAA,MACd;AAAA,IACJ;AAEA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,SAAS,YAAY,KAAK,QAAQ,SAAS,WAAW,WAAW;AAAA,EAC7E;AAUA,iBAAe,UAAU;AAErB,UAAM,UAAU,mBAAmB,QAAQ;AAG3C,QAAI,QAAQ,CAAC;AACb,WAAO,CAAC,MAAM,OAAO,GAAG;AACpB,YAAM,SAAS,QAAQ;AACvB,UAAI;AACJ,UAAI,OAAO,WAAW,IAAI,GAAG;AAAA,MAE7B,WAAW,OAAO,OAAO,KAAK;AAAA,MAE9B;AAGA,UAAI,CAAC,MAAM;AACP,eAAO,UAAU,OAAO;AACxB,gBAAQ,IAAI,IAAI;AAEhB;AAAA,MACJ;AACA,YAAM,KAAK,IAAI;AAAA,IACnB;AAAA,EAGJ;AAGA,MAAM,YAAY,aAAW;AAEzB,QAAI,YAAY,CAAC,MAAM,GAAG;AAG1B,QAAI,WAAW,QAAQ,OAAO;AAE9B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,YAAM,QAAQ,QAAQ,OAAO,QAAQ,UAAU,IAAI,CAAC;AACpD,UAAI,UAAU,MAAM,WAAW,OAAO;AAElC,mBAAW;AAAA,MACf;AAAA,IACJ;AAGA,UAAM,QAAQ,UAAU,OAAO;AAG/B,UAAM,UAAU,cAAc,SAAS,QAAQ;AAE/C,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,IAEJ;AAAA,EACJ;",
  "names": []
}
